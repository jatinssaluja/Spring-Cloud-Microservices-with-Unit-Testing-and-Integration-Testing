package com.jatin.springcloud.controllers;

import static org.hamcrest.CoreMatchers.any;
import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.doReturn;
import static org.mockito.Mockito.when;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MvcResult;
import org.springframework.test.web.servlet.RequestBuilder;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.common.base.Optional;
import com.jatin.springcloud.model.Coupon;
import com.jatin.springcloud.repos.CouponRepo;

@RunWith(SpringRunner.class)
@WebMvcTest(CouponRestController.class)
public class CouponRestControllerTest {
	
	@Autowired
	private MockMvc mockMvc;
	
	@MockBean
	private CouponRepo repo;
	
	
	@Test
	public void getCouponByCodeWithoutException() throws Exception {
		
		Coupon mockCoupon = new Coupon(1,"SUPERSALE1","10","12-12-2020");
		
		when(repo.findByCode("SUPERSALE1")).thenReturn(mockCoupon);
		
		RequestBuilder request = MockMvcRequestBuilders
				.get("/couponapi/coupons/SUPERSALE1")
				.accept(MediaType.APPLICATION_JSON);
		
		MvcResult result = mockMvc.perform(request)
				.andExpect(status().isOk())
				.andExpect(content().json("{id:1,code:SUPERSALE1,discount:10,expDate:12-12-2020}"))
				.andReturn();
		
		
		
	}
	
	@Test
	public void getCouponByCodeWithException() throws Exception {
		
	
		when(repo.findByCode("abcde")).thenReturn(null);
		
		RequestBuilder request = MockMvcRequestBuilders
				.get("/couponapi/coupons/abcde")
				.accept(MediaType.APPLICATION_JSON);
		
		mockMvc.perform(request).andExpect(status().isNotFound());
		
		
		
	}
	
	@Test
	public void createCouponWithoutException() throws Exception {
		
		//Coupon postCoupon = new Coupon("SUPERSALE1","10","12-12-2020");
		Coupon mockCoupon = new Coupon(1,"SUPERSALE1","10","12-12-2020");
		
		//when(repo.save(mockCoupon)).thenReturn(mockCoupon);
		
		doReturn(mockCoupon).when(repo).save(mockCoupon);
		
		
		
		mockMvc.perform(post("/couponapi/coupons")
				.accept(MediaType.APPLICATION_JSON)
				.content("{\"code\":\"request to be send\"}"))
				.andExpect(status().isOk());
		
		
		
	}
	
	
	static String asJsonString(Object obj) throws Exception {
		
		return new ObjectMapper().writeValueAsString(obj);
		
	}
	
	

}
